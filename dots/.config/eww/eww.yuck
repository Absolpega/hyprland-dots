(defwidget spacer-350 []
  (box :class "spacer-350")
  )

(defwidget spacer-300 []
  (box :class "spacer-300")
  )

(defwidget spacer-200 []
  (box :class "spacer-200")
  )

(defwidget spacer-100 []
  (box :class "spacer-100")
  )

(defwidget spacer-10 []
  (box :class "spacer-10")
  )

(defwidget spacer-350-v []
  (box :class "spacer-350-v")
  )

(defwidget spacer-300-v []
  (box :class "spacer-300-v")
  )

(defwidget spacer-200-v []
  (box :class "spacer-200-v")
  )

(defwidget spacer-100-v []
  (box :class "spacer-100-v")
  )

(defwidget spacer-10-v []
  (box :class "spacer-10-v")
  )

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox
    ;;:onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}"
    :class "workspaces-widget"
    (box :space-evenly true :class "workspace-entry-box bar"
      :orientation "vertical"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                  :class "workspace-entry"
                  ;;:class "${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
          (box
            :class "${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )

(deflisten window :initial "..." "bash ~/.config/eww/scripts/get-window-title")
(defwidget window_w []
  (box
    (label :text "${window}")
    )
  )

(defwidget empty []
  (box)
  )

;;(defpoll time :interval "10s" "date +'%I : %M  %p'")
;;(defwidget time_w []
;;  (box :class "bar time"
;;    (label :text "${time}")
;;    )
;;  )

(defpoll time-v :interval "1s" "date +'%I%n%M%n%p'")
(defwidget time_w-v []
  (box :class "bar time-v"
    (label :text "${time-v}")
    )
  )

(defwidget bar- []
  (centerbox
    :orientation "vertical"
    ;;(centerbox(empty)(workspaces)(empty))
    (workspaces)
    (spacer-200-v)
    ;;(empty)
    (time_w-v)
    )
  )

(defwindow bar-window
  :monitor 0
  :windowtype "dock"
  :geometry (geometry
              :x "5px"
              :y "5px"
              :width "3%"
              :height "100%"
              :anchor "right center"
            )
  :stacking "fg"
  :reserve (struts
             :side "top"
             :distance "10%"
           )
  :wm-ignore false
  :exclusive true
  (bar-)
  )

