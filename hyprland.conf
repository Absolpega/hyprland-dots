source = ./settings.conf


exec-once = swww init
exec = swww img -t wipe ~/.config/hypr/wallpapers/sunset.jpg
exec-once = waybar
exec-once = swaync
exec-once = swayosd-server

exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = swayidle -w before-sleep 'swaylock -f'

env = XCURSOR_SIZE, 24

env = XDG_SESSION_TYPE, wayland
env = XDG_CURRENT_DESKTOP, sway
env = XDG_SESSION_DESKTOP, sway

env = LIBVA_DRIVER_NAME, nvidia
env = XDG_SESSION_TYPE, wayland
env = GBM_BACKEND, nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME, nvidia
env = WLR_NO_HARDWARE_CURSORS, 1

input {
    kb_layout = us, cz
    kb_variant = , qwerty
    kb_model =
    kb_options = altwin:swap_lalt_lwin
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = no
    }
	# -1.0 to 1.0
    sensitivity = 0
}

general {
    gaps_in = 5
    gaps_out = 20
    border_size = 1
    col.active_border = rgba(aaccffff)
    col.inactive_border = rgba(00000000)

    layout = master

	#no_cursor_warps = true
	no_cursor_warps = false
}

misc {
	vrr = 1
}

decoration {
    rounding = 10

    blur {
        enabled = yes
        size = 1
        passes = 4
    }

    drop_shadow = no
    shadow_range = 20
    shadow_render_power = 4
    col.shadow = rgba(ccaaff60)
    col.shadow_inactive = rgba(122212ff)
}

animations {
    enabled = yes

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    #animation = workspaces, 1, 6, default, slidevert
    animation = workspaces, 1, 6, default
}

dwindle {
	# master switch for pseudotiling.
    pseudotile = yes
	# you probably want this
    preserve_split = yes
}

master {
    new_is_master = true
	new_on_top = true
	no_gaps_when_only = false
}

gestures {
    workspace_swipe = true
}

# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind = $mainMod, return, exec, alacritty
bind = $mainMod SHIFT, C, killactive,
bind = $mainMod SHIFT, Q, exit,
bind = $mainMod, T, togglefloating,

bind = $mainMod, n, exec, swaync-client -t

bind = $mainMod, F, fullscreen, 0
bind = $mainMod, G, fullscreen, 1

bind = $mainMod, O, exec, rofi -show drun
bind = $mainMod, P, exec, rofi -show run

bind = $mainMod, Y, exec, hyprctl switchxkblayout $keyboard next
bind = $mainMod, F1, exec, swaylock
bind = , print, exec, slurp | grim -g - - | swappy -f -
bind = SHIFT, print, exec, $conf_dir/scripts/record.sh
bind = CTRL, print, exec, pkill -INT wf-recorder
bind = CTRL SHIFT, print, exec, wl-paste | ripdrag -I

binde = $mainMod, H, resizeactive, -30 0
binde = $mainMod, L, resizeactive, 30 0

bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod SHIFT, J, layoutmsg, swapnext
bind = $mainMod SHIFT, K, layoutmsg, swapprev

bind = $mainMod SHIFT, E, exec, pkill eww; $conf_dir/scripts/bar.sh

bindle = , XF86AudioRaiseVolume, exec, swayosd-client --output-volume +2
bindle = , XF86AudioLowerVolume, exec, swayosd-client --output-volume -2
bindl = , XF86AudioMute, exec, swayosd-client --output-volume mute-toggle
bindl = , XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle

bindl = , XF86MonBrightnessUp, exec, swayosd-client --brightness raise
bindl = , XF86MonBrightnessDown, exec, swayosd-client --brightness lower

bindlr = CAPS, Caps_Lock, exec, swayosd-client --caps-lock


# Switch workspaces with mainMod + [1-9]
# SHIFT to move window to workspace
# with CTRL for second monitor

